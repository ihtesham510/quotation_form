/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardInventoryRouteImport } from './routes/dashboard/inventory'
import { Route as DashboardFormsRouteImport } from './routes/dashboard/forms'
import { Route as DashboardHistoryRouteRouteImport } from './routes/dashboard/history/route'
import { Route as DashboardHistoryIndexRouteImport } from './routes/dashboard/history/index'
import { Route as DashboardForm_idIndexRouteImport } from './routes/dashboard/$form_id/index'
import { Route as DashboardHistoryQuotationIdRouteImport } from './routes/dashboard/history/$quotationId'
import { Route as DashboardForm_idManage_productsRouteImport } from './routes/dashboard/$form_id/manage_products'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardInventoryRoute = DashboardInventoryRouteImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardFormsRoute = DashboardFormsRouteImport.update({
  id: '/forms',
  path: '/forms',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardHistoryRouteRoute = DashboardHistoryRouteRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardHistoryIndexRoute = DashboardHistoryIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardHistoryRouteRoute,
} as any)
const DashboardForm_idIndexRoute = DashboardForm_idIndexRouteImport.update({
  id: '/$form_id/',
  path: '/$form_id/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardHistoryQuotationIdRoute =
  DashboardHistoryQuotationIdRouteImport.update({
    id: '/$quotationId',
    path: '/$quotationId',
    getParentRoute: () => DashboardHistoryRouteRoute,
  } as any)
const DashboardForm_idManage_productsRoute =
  DashboardForm_idManage_productsRouteImport.update({
    id: '/$form_id/manage_products',
    path: '/$form_id/manage_products',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard/history': typeof DashboardHistoryRouteRouteWithChildren
  '/dashboard/forms': typeof DashboardFormsRoute
  '/dashboard/inventory': typeof DashboardInventoryRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/$form_id/manage_products': typeof DashboardForm_idManage_productsRoute
  '/dashboard/history/$quotationId': typeof DashboardHistoryQuotationIdRoute
  '/dashboard/$form_id': typeof DashboardForm_idIndexRoute
  '/dashboard/history/': typeof DashboardHistoryIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard/forms': typeof DashboardFormsRoute
  '/dashboard/inventory': typeof DashboardInventoryRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/$form_id/manage_products': typeof DashboardForm_idManage_productsRoute
  '/dashboard/history/$quotationId': typeof DashboardHistoryQuotationIdRoute
  '/dashboard/$form_id': typeof DashboardForm_idIndexRoute
  '/dashboard/history': typeof DashboardHistoryIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/dashboard/history': typeof DashboardHistoryRouteRouteWithChildren
  '/dashboard/forms': typeof DashboardFormsRoute
  '/dashboard/inventory': typeof DashboardInventoryRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/$form_id/manage_products': typeof DashboardForm_idManage_productsRoute
  '/dashboard/history/$quotationId': typeof DashboardHistoryQuotationIdRoute
  '/dashboard/$form_id/': typeof DashboardForm_idIndexRoute
  '/dashboard/history/': typeof DashboardHistoryIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/history'
    | '/dashboard/forms'
    | '/dashboard/inventory'
    | '/dashboard/'
    | '/dashboard/$form_id/manage_products'
    | '/dashboard/history/$quotationId'
    | '/dashboard/$form_id'
    | '/dashboard/history/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/forms'
    | '/dashboard/inventory'
    | '/dashboard'
    | '/dashboard/$form_id/manage_products'
    | '/dashboard/history/$quotationId'
    | '/dashboard/$form_id'
    | '/dashboard/history'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/sign-in'
    | '/sign-up'
    | '/dashboard/history'
    | '/dashboard/forms'
    | '/dashboard/inventory'
    | '/dashboard/'
    | '/dashboard/$form_id/manage_products'
    | '/dashboard/history/$quotationId'
    | '/dashboard/$form_id/'
    | '/dashboard/history/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/inventory': {
      id: '/dashboard/inventory'
      path: '/inventory'
      fullPath: '/dashboard/inventory'
      preLoaderRoute: typeof DashboardInventoryRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/forms': {
      id: '/dashboard/forms'
      path: '/forms'
      fullPath: '/dashboard/forms'
      preLoaderRoute: typeof DashboardFormsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/history': {
      id: '/dashboard/history'
      path: '/history'
      fullPath: '/dashboard/history'
      preLoaderRoute: typeof DashboardHistoryRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/history/': {
      id: '/dashboard/history/'
      path: '/'
      fullPath: '/dashboard/history/'
      preLoaderRoute: typeof DashboardHistoryIndexRouteImport
      parentRoute: typeof DashboardHistoryRouteRoute
    }
    '/dashboard/$form_id/': {
      id: '/dashboard/$form_id/'
      path: '/$form_id'
      fullPath: '/dashboard/$form_id'
      preLoaderRoute: typeof DashboardForm_idIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/history/$quotationId': {
      id: '/dashboard/history/$quotationId'
      path: '/$quotationId'
      fullPath: '/dashboard/history/$quotationId'
      preLoaderRoute: typeof DashboardHistoryQuotationIdRouteImport
      parentRoute: typeof DashboardHistoryRouteRoute
    }
    '/dashboard/$form_id/manage_products': {
      id: '/dashboard/$form_id/manage_products'
      path: '/$form_id/manage_products'
      fullPath: '/dashboard/$form_id/manage_products'
      preLoaderRoute: typeof DashboardForm_idManage_productsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardHistoryRouteRouteChildren {
  DashboardHistoryQuotationIdRoute: typeof DashboardHistoryQuotationIdRoute
  DashboardHistoryIndexRoute: typeof DashboardHistoryIndexRoute
}

const DashboardHistoryRouteRouteChildren: DashboardHistoryRouteRouteChildren = {
  DashboardHistoryQuotationIdRoute: DashboardHistoryQuotationIdRoute,
  DashboardHistoryIndexRoute: DashboardHistoryIndexRoute,
}

const DashboardHistoryRouteRouteWithChildren =
  DashboardHistoryRouteRoute._addFileChildren(
    DashboardHistoryRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardHistoryRouteRoute: typeof DashboardHistoryRouteRouteWithChildren
  DashboardFormsRoute: typeof DashboardFormsRoute
  DashboardInventoryRoute: typeof DashboardInventoryRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardForm_idManage_productsRoute: typeof DashboardForm_idManage_productsRoute
  DashboardForm_idIndexRoute: typeof DashboardForm_idIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardHistoryRouteRoute: DashboardHistoryRouteRouteWithChildren,
  DashboardFormsRoute: DashboardFormsRoute,
  DashboardInventoryRoute: DashboardInventoryRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardForm_idManage_productsRoute: DashboardForm_idManage_productsRoute,
  DashboardForm_idIndexRoute: DashboardForm_idIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
